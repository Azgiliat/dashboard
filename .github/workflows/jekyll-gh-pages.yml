# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_run:
    workflows: ["Lint & build"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - run: yarn install
      - run: yarn build
        env:
          VITE_API_KEY: ${{vars.VITE_API_KEY}}
          VITE_AUTH_DOMAIN : ${{vars.VITE_AUTH_DOMAIN}}
          VITE_PROJECT_ID: ${{vars.VITE_PROJECT_ID}}
          VITE_STORAGE_BUCKET: ${{vars.VITE_STORAGE_BUCKET}}
          VITE_MESSAGING_SENDER_ID: ${{vars.VITE_MESSAGING_SENDER_ID}}
          VITE_APP_ID: ${{vars.VITE_APP_ID}}
          VITE_DATABASE_URL: ${{vars.VITE_DATABASE_URL}}
      - uses: actions/jekyll-build-pages@v1
        with:
          source: ./dist
          destination: ./_site
      - uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
